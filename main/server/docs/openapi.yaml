openapi: 3.0.3
info:
  title: Vial MCP API
  version: 1.0.0
  description: API for Vial MCP with embedded OAuth, quantum processing, and note management.
servers:
  - url: https://localhost:8000/api
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
  /auth/login:
    post:
      summary: Authenticate and generate OAuth tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key: { type: string }
                wallet_id: { type: string }
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token: { type: string }
                  refresh_token: { type: string }
                  expires_at: { type: string }
        '401':
          description: Invalid API key
        '500':
          description: Server error
      security:
        - apiKey: []
  /auth/refresh:
    post:
      summary: Refresh OAuth access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token: { type: string }
                wallet_id: { type: string }
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token: { type: string }
                  expires_at: { type: string }
        '401':
          description: Invalid or expired refresh token
        '500':
          description: Server error
  /quantum/link:
    post:
      summary: Process a quantum task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vial_id: { type: string }
                prompt: { type: string }
                wallet_id: { type: string }
      responses:
        '200':
          description: Successful quantum processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  quantum_state: { type: object }
                  wallet_id: { type: string }
        '401':
          description: Invalid access token
        '500':
          description: Quantum processing error
      security:
        - bearerAuth: []
  /notes/add:
    post:
      summary: Add a note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_id: { type: string }
                content: { type: string }
                resource_id: { type: string, nullable: true }
      responses:
        '200':
          description: Successful note addition
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  note_id: { type: integer }
                  wallet_id: { type: string }
        '401':
          description: Invalid access token
        '500':
          description: Note storage error
      security:
        - bearerAuth: []
  /notes/read:
    post:
      summary: Read a note by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note_id: { type: integer }
                wallet_id: { type: string }
      responses:
        '200':
          description: Successful note retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  note: { type: object }
        '401':
          description: Invalid access token
        '404':
          description: Note not found or unauthorized
        '500':
          description: Server error
      security:
        - bearerAuth: []
  /resources/latest:
    post:
      summary: Retrieve latest resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_id: { type: string }
                limit: { type: integer }
      responses:
        '200':
          description: Successful resource retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  resources: { type: array, items: { type: object } }
        '401':
          description: Invalid access token
        '500':
          description: Resource retrieval error
      security:
        - bearerAuth: []
  /wallet/create:
    post:
      summary: Create a new wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_id: { type: string }
                user_id: { type: string }
                api_key: { type: string }
      responses:
        '200':
          description: Successful wallet creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  wallet_id: { type: string }
        '401':
          description: Invalid access token
        '500':
          description: Wallet creation error
      security:
        - bearerAuth: []
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
