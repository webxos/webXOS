Vial MCP Controller - LLM Documentation

Overview:
The Vial MCP Controller is a lightweight, agentic MCP server for managing a 4x quantum-simulated network with $WEBXOS wallet integration. It uses FastAPI, FastMCP, Qiskit, Web3.py, SQLite, and JWT authentication.

Endpoints:
- /auth: Authenticate with client, deviceId, sessionId, networkId. Returns JWT token and address.
- /void: Void a session and reset vials. Requires token.
- /health: Check server status. Returns {"status": "ok"}.
- /train: Train 4 vial agents with uploaded file and network ID. Returns vial states and balance.
- /export: Export vial states and wallet data as markdown. Requires network ID and token.
- /upload: Upload files for processing. Requires network ID and token.
- /comms_hub: Process messages via LangChain with NanoGPT. Requires message and network ID.
- /stream/{network_id}: Stream vial states in real-time via SSE. Requires network ID and token.

Tools:
- sample_tool: Processes input data (tools/base_tool.py).
- train_vials: Trains agents and updates wallet balance.

Prompts:
- base_prompt: Analyzes input data (prompts/base_prompt.py).

Usage:
Use vial.html for frontend control or client.py for programmatic access. Authenticate first, then train or export data. Monitor real-time updates via /stream.

Deployment:
- Backend: Run with Docker (docker-compose.yaml) or uvicorn.
- Frontend: Deploy vial.html and static/ to Netlify (netlify.toml).
- CI/CD: GitHub Actions (ci.yml) for testing and building.