openapi: 3.0.3
info:
  title: Vial MCP Controller API
  version: 1.0.0
  description: API for managing AI agents (vials) and $WEBXOS wallet operations.
servers:
  - url: http://localhost:8000/api
paths:
  /auth:
    post:
      summary: Authenticate user and generate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId: { type: string }
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { apiKey: { type: string } } } } } }
        '500': { description: Server error }
  /vials:
    get:
      summary: Retrieve all vials
      security: [{ bearerAuth: [] }]
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { agents: { type: object } } } } } }
        '401': { description: Unauthorized }
        '500': { description: Server error }
  /wallet:
    post:
      summary: Update wallet balance
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction: { type: object, properties: { amount: { type: number } } }
                wallet: { type: object, properties: { target_address: { type: string } } }
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { status: { type: string } } } } } }
        '401': { description: Unauthorized }
        '500': { description: Server error }
  /wallet/cashout:
    post:
      summary: Cash out $WEBXOS
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction: { type: object, properties: { amount: { type: number } } }
                wallet: { type: object, properties: { target_address: { type: string } } }
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { status: { type: string } } } } } }
        '401': { description: Unauthorized }
        '500': { description: Server error }
  /import:
    post:
      summary: Import wallet and vial export
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { agents: { type: object } } } } } }
        '400': { description: Invalid format }
        '401': { description: Unauthorized }
        '500': { description: Server error }
  /vial/update:
    post:
      summary: Update vial data
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vial_id: { type: string }
                data: { type: object }
      responses:
        '200': { description: Success, content: { application/json: { schema: { type: object, properties: { status: { type: string } } } } } }
        '400': { description: Invalid data }
        '401': { description: Unauthorized }
        '500': { description: Server error }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
