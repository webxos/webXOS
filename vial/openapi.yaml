openapi: 3.0.3
info:
  title: Vial MCP API
  version: 2.1.0
paths:
  /health:
    get:
      summary: Check server status
      responses:
        '200':
          description: Server is online
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, enum: [ok] }
        '500':
          description: Server error
  /auth:
    post:
      summary: Authenticate client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client: { type: string }
                deviceId: { type: string }
                sessionId: { type: string }
                networkId: { type: string }
              required: [client, deviceId, sessionId, networkId]
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }
                  address: { type: string }
                  networkId: { type: string }
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /train:
    post:
      summary: Train vials
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                networkId: { type: string }
                file: { type: string, format: binary }
              required: [networkId, file]
      responses:
        '200':
          description: Training successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  vials: { type: object }
                  balance: { type: number }
                  walletHash: { type: string }
                  quantumData: { type: object }
        '400':
          description: Invalid file
        '401':
          description: Unauthorized
  /export:
    get:
      summary: Export vial and wallet data
      security:
        - BearerAuth: []
      parameters:
        - name: networkId
          in: query
          schema: { type: string }
          required: true
      responses:
        '200':
          description: Export successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  markdown: { type: string }
        '400':
          description: Invalid network ID
        '401':
          description: Unauthorized
  /upload:
    post:
      summary: Import .md or .py file
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                networkId: { type: string }
                file: { type: string, format: binary }
              required: [networkId, file]
      responses:
        '200':
          description: Import successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
        '400':
          description: Invalid file
        '401':
          description: Unauthorized
  /void:
    post:
      summary: Reset network and wallet
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, enum: [voided] }
        '401':
          description: Unauthorized
  /comms_hub:
    post:
      summary: Process git commands or prompts
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message: { type: string }
                network_id: { type: string }
              required: [message, network_id]
      responses:
        '200':
          description: Processing successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response: { type: string }
        '400':
          description: Invalid prompt
        '401':
          description: Unauthorized
  /stream/{network_id}:
    get:
      summary: Stream vial states
      security:
        - BearerAuth: []
      parameters:
        - name: network_id
          in: path
          schema: { type: string }
          required: true
      responses:
        '200':
          description: Stream established
          content:
            text/event-stream:
              schema:
                type: object
                properties:
                  vials: { type: object }
        '401':
          description: Unauthorized
        '404':
          description: Network not found
  /validate_wallet:
    post:
      summary: Validate wallet hash
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash: { type: string }
              required: [hash]
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                type: object
