version: '3.8'

services:
  backend:
    build:
      context: ./main/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NEON_DATABASE_URL=${NEON_DATABASE_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./main/api/mcp/cert.pem:/app/cert.pem
      - ./main/api/mcp/key.pem:/app/key.pem
    healthcheck:
      test: ["CMD", "curl", "-f", "--cacert", "/app/cert.pem", "https://localhost:8000/mcp/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  frontend:
    build:
      context: ./main/frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=vial_mcp
      - POSTGRES_USER=mcpuser
      - POSTGRES_PASSWORD=mcppassword
    volumes:
      - ./main/api/mcp/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./main/api/mcp/database/init_db.sql:/docker-entrypoint-initdb.d/02-init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcpuser"]
      interval: 10s
      timeout: 5s
      retries: 5
